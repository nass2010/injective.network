import{h as N,Y as B,_ as g,$ as I,a0 as y,a1 as M,a2 as d,a3 as W,x as U,I as f,a4 as v,a5 as T,u as E,c as R,o as j,a6 as x,a7 as b}from"./entry.d056f6df.js";import{g as t,h as $}from"./currency.3c5184cf.js";import{s as D}from"./StreamProvider.04db0d1c.js";import{eq as G,d_ as k,G as F,er as C,es as p,et as H,ao as m,eu as J,cP as L}from"./injective.5ec62b21.js";import{r as O,t as S}from"./index.379cfe5b.js";import{s as P}from"./index.213bb253.js";const e={117:t(7.51),116:t(7.3),115:t(7.42),114:t(7),113:t(6.83),112:t(7.12),111:t(7.48),110:t(7.1),109:t(8.01),108:t(8.06),107:t(7.98),106:t(9.1),105:t(8.19),104:t(8.42),103:t(7.69),102:t(6.995),101:t(6.22),100:t(7.16),99:t(7.22),98:t(6.52),97:t(6.06),96:t(6.25),95:t(7.56),94:t(8.44),93:t(8.92),92:t(6.64),91:t(5.48),90:t(4.34),89:t(4.2),88:t(4.15),87:t(3.07),86:t(3.71),85:t(3.78),84:t(3.73),83:t(4.02),82:t(3.0373),81:t(1.9328),80:t(1.6478),79:t(1.3141),78:t(1.2694),77:t(1.1881),76:t(1.3342),75:t(1.6387),74:t(1.6015),73:t(1.7214),72:t(1.7079),71:t(1.6822),70:t(1.7341),69:t(2.4204),68:t(2.0848),67:t(2.0482),66:t(1.8539),65:t(1.7778),64:t(1.7333),63:t(1.5116),62:t(1.6745),61:t(1.497),60:t(1.5704),59:t(1.7836),58:t(2.0733),57:t(1.5164),56:t(1.4496),55:t(1.2412),54:t(1.3956),53:t(1.2095),52:t(1.2644),51:t(1.2832),50:t(1.374),49:t(1.465),48:t(1.904),47:t(2.208),46:t(2.218),45:t(2.475),44:t(2.668),43:t(4.36),42:t(4.16),41:t(5.3726),40:t(5.4225),39:t(6.07),38:t(6.2),37:t(5.55),36:t(5.189),35:t(5.345),34:t(5.58),33:t(5.78),32:t(6.25),31:t(4.83),30:t(4.33),29:t(4.423),28:t(6.35),27:t(7.34),26:t(8.24),25:t(8.82),24:t(8.304),23:t(9.267)},K={"04-10-2023":e[117],"27-09-2023":e[116],"20-09-2023":e[115],"13-09-2023":e[114],"06-09-2023":e[113],"30-08-2023":e[112],"23-08-2023":e[111],"16-08-2023":e[110],"09-08-2023":e[109],"02-08-2023":e[108],"26-07-2023":e[107],"19-07-2023":e[106],"12-07-2023":e[105],"05-07-2023":e[104],"28-06-2023":e[103],"21-06-2023":e[102],"14-06-2023":e[101],"07-06-2023":e[100],"31-05-2023":e[99],"24-05-2023":e[98],"17-05-2023":e[97],"10-05-2023":e[96],"03-05-2023":e[95],"26-04-2023":e[94],"19-04-2023":e[93],"12-04-2023":e[92],"05-04-2023":e[91],"29-03-2023":e[90],"22-03-2023":e[89],"15-03-2023":e[88],"08-03-2023":e[87],"01-03-2023":e[86],"22-02-2023":e[85],"15-02-2023":e[84],"08-02-2023":e[83],"01-02-2023":e[82],"25-01-2023":e[81],"18-01-2023":e[80],"11-01-2023":e[79],"04-01-2023":e[78],"28-12-2022":e[77],"21-12-2022":e[76],"14-12-2022":e[75],"07-12-2022":e[74],"30-11-2022":e[73],"23-11-2022":e[72],"16-11-2022":e[71],"09-11-2022":e[70],"02-11-2022":e[69],"26-10-2022":e[68],"19-10-2022":e[67],"12-10-2022":e[66],"05-10-2022":e[65],"28-09-2022":e[64],"21-09-2022":e[63],"14-09-2022":e[62],"07-09-2022":e[61],"31-08-2022":e[60],"24-08-2022":e[59],"17-08-2022":e[58],"10-08-2022":e[57],"03-08-2022":e[56],"27-07-2022":e[55],"20-07-2022":e[54],"13-07-2022":e[53],"06-07-2022":e[52],"29-06-2022":e[51],"22-06-2022":e[50],"15-06-2022":e[49],"08-06-2022":e[48],"01-06-2022":e[47],"25-05-2022":e[46],"18-05-2022":e[45],"11-05-2022":e[44],"04-05-2022":e[43],"27-04-2022":e[42],"20-04-2022":e[41],"13-04-2022":e[40],"06-04-2022":e[39],"30-03-2022":e[38],"23-03-2022":e[37],"16-03-2022":e[36],"09-03-2022":e[35],"02-03-2022":e[34],"23-02-2022":e[33],"16-02-2022":e[32],"09-02-2022":e[31],"02-02-2022":e[30],"26-1-2022":e[29],"19-1-2022":e[28],"12-1-2022":e[27],"5-1-2022":e[26],"29-12-2021":e[25],"22-12-2021":e[24],"15-12-2021":e[23]},q=a=>N?[...a].slice(0,a.length-1):a.filter(({round:n},i)=>n>=23&&i+1!==a.length),w=new G(B.indexer),V=({callback:a})=>{const n=w.streamBids.bind(w),i={callback:a};D.subscribe({fn:n,args:i,key:g.Bids})},Y=()=>{D.cancel(g.Bids)};function z(a,n){O(2,arguments);var i=P(a),s=P(n);return i.getTime()===s.getTime()}function Q(a,n){O(2,arguments);var i=S(a),s=S(n);return i.getTime()>s.getTime()}const X=a=>K[C(a)],Z=a=>e[a],tt=a=>{const n=a?Q(new Date,new Date(p(a))):!1,i=a?z(new Date,new Date(p(a))):!0;return{isHistoricalDate:n,isToday:i}},h=async({endTimestamp:a,round:n,coinGeckoId:i=k})=>{if([I,y].includes(i))return $;if(![M,k].includes(i))throw new F(new Error("Only stable coins and INJ are currently supported"));let s;if(a&&(s=X(a)),n&&(s=Z(n)),s)return s;if(!a){const l=await d.fetchUsdTokenPrice(i);return t(l)}const{isToday:o}=tt(a);if(o){const l=await d.fetchUsdTokenPrice(i);return t(l)}const c=C(a),{market_data:{current_price:r}}=await W.fetchHistory(i,{date:c});return r};class A extends H{static grpcAuctionToAuctionModuleState(n){const i=n.basket.map(o=>({amount:o.amount,denom:o.denom}));return{auctionModuleState:{params:{auctionPeriod:0,minNextBidIncrementRate:"0"},auctionRound:parseInt(n.round,10),auctionEndingTimestamp:parseInt(n.endTimestamp,10),highestBid:{bidder:n.winner,amount:n.winningBidAmount}},basket:i}}static grpcAuctionToAuction(n,i){const s={params:{auctionPeriod:0,minNextBidIncrementRate:"0"},auctionRound:n.round,auctionEndingTimestamp:n.endTimestamp,highestBid:{bidder:n.winner,amount:n.winningBidAmount}};return{auction:{bids:i,round:s.auctionRound,basket:n.basketList},historicalAuctionModuleState:s}}static grpcAuctionsToAuctions(n){return n.map(i=>({...i,basket:i.basketList}))}}const et=async a=>{const n=await h({round:a.round}),i=await L(a.basket,async o=>({...o,token:await b.getDenomToken(o.denom)})),s=await Promise.all(i.filter(o=>o.token).map(async o=>{const c=await d.fetchUsdTokenPrice(o.token.coinGeckoId);return{...o,price:t(c)}}));return{injPrice:n,auctionWithTokenAndPrice:{...a,injPrice:n,basket:s}}},nt=async a=>{let n=await h({round:a.round});if(!n){const o=await d.fetchUsdTokenPrice(f);n=t(o)}const i=await Promise.all(a.basket.map(async o=>({...o,token:await b.getDenomToken(o.denom)}))),s=await Promise.all(i.filter(o=>o.token).filter(o=>o.token.coinGeckoId&&[y,I].includes(o.token.coinGeckoId)).map(async o=>{let c=await h({round:a.round,coinGeckoId:o.token.coinGeckoId});if(!c){const r=await d.fetchUsdTokenPrice(f);c=t(r)}return{...o,price:c}}));return{injPrice:n,auctionWithTokenAndPrice:{...a,injPrice:n,basket:s}}},at=()=>({injPrice:{chf:"0",eur:"0",gbp:"0",usd:"0"},auctionModuleState:void 0,auction:void 0,auctionWithTokenAndPrice:void 0,latestRound:0,pastAuctions:[],pastAuctionsWithTokenAndPrice:[],ticketsShown:[]}),u=U("auction",{state:()=>at(),actions:{async fetchInjPrice(){const a=u(),n=await d.fetchUsdTokenPrice(f);a.$patch({injPrice:t(n)})},async fetchLatestAuctionModuleState(){const a=u(),n=await v.fetchModuleState(),i=A.grpcAuctionModuleStateToModuleState(n);a.$patch({latestRound:i.auctionRound,auctionModuleState:i})},async fetchAuction(a){const n=u(),{auction:i,bids:s}=await T.fetchAuction(a||-1),o=A.grpcAuctionToAuction(i,s);if(!o||!o.auction||!o.historicalAuctionModuleState)return;const{auctionWithTokenAndPrice:c,injPrice:r}=await et(o.auction);n.$patch({injPrice:r,auctionWithTokenAndPrice:c,auction:o.auction}),a?n.$patch({auctionModuleState:o.historicalAuctionModuleState}):await n.fetchLatestAuctionModuleState()},async fetchPastAuctions(){const a=u(),n=await T.fetchAuctions(),i=A.grpcAuctionsToAuctions(n),s=q(i),o=await Promise.all(s.map(async c=>{const{auctionWithTokenAndPrice:r}=await nt(c);return r}));a.$patch({pastAuctions:s,pastAuctionsWithTokenAndPrice:o})},async bid({amount:a}){const n=u(),i=E(),s=R(),{injectiveAddress:o,isUserWalletConnected:c}=s,{latestRound:r}=n;if(!c)return;await i.validate(),await s.validate();const l=new m(new m(a).toFixed(3,m.ROUND_DOWN)).toWei().toFixed(0),_=J.fromJSON({injectiveAddress:o,round:r,amount:{denom:j,amount:l}});await x.broadcast({injectiveAddress:o,msgs:_}),await n.fetchAuction()},reset(){u().$reset()},streamBids(){const a=u();V({callback:({bid:n})=>{const i=a.auction;i&&n&&a.$patch({auction:{...i,bids:[n,...i.bids]}})}})},cancelBidsStream(){Y()}}});export{u};
